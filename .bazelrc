build --announce_rc
build --verbose_failures
build --config=clang
build --config=roma_legacy

# Broadly disable C++ Exceptions
# https://google.github.io/styleguide/cppguide.html#Exceptions
build --copt=-fno-exceptions
# Grant exceptions to some dependencies so they can use exceptions
build --per_file_copt=.*boost.*@-fexceptions
build --per_file_copt=.*cc/aws/proxy.*@-fexceptions
build --per_file_copt=.*cc/roma.*@-fexceptions
build --per_file_copt=.*oneTBB.*@-fexceptions
build --per_file_copt=.*com_github_nghttp2_nghttp2.*@-fexceptions
build --per_file_copt=.*cc/core.*@-fexceptions
build --per_file_copt=.*cc/cpio.*@-fexceptions

build -c opt
build --output_filter='^//((?!(third_party):).)*$'`
build --color=yes
build --@io_bazel_rules_docker//transitions:enable=false
build --workspace_status_command="bash tools/get_workspace_status"
build --copt=-Werror=thread-safety-analysis

test --test_output=errors
# Disable ICU linking for googleurl.
build --@com_google_googleurl//build_config:system_icu=0
build --@io_opentelemetry_cpp//api:with_abseil=true

build:clang --cxxopt=-fbracket-depth=512
build:clang --client_env=CC=clang
build:clang --cxxopt=-std=c++17
build:clang --host_cxxopt=-std=c++17
build:clang --client_env=BAZEL_CXXOPTS=-std=c++17

build:roma_legacy --@control_plane_shared//cc/roma/roma_service/src:service=legacy

build:roma_sandboxed --@control_plane_shared//cc/roma/roma_service/src:service=sandboxed

# Address sanitizer
# To use it: bazel build --config asan
build:asan --strip=never
build:asan --copt -fsanitize=address
build:asan --copt -DADDRESS_SANITIZER
build:asan --copt -O1
build:asan --copt -g
build:asan --copt -fno-omit-frame-pointer
build:asan --linkopt -fsanitize=address

# Thread sanitizer
# bazel build --config tsan
build:tsan --strip=never
build:tsan --copt -fsanitize=thread
build:tsan --copt -DTHREAD_SANITIZER
build:tsan --copt -DDYNAMIC_ANNOTATIONS_ENABLED=1
build:tsan --copt -DDYNAMIC_ANNOTATIONS_EXTERNAL_IMPL=1
build:tsan --copt -O1
build:tsan --copt -fno-omit-frame-pointer
build:tsan --linkopt -fsanitize=thread

# --config msan: Memory sanitizer
build:msan --strip=never
build:msan --copt -fsanitize=memory
build:msan --copt -DADDRESS_SANITIZER
build:msan --copt -O1
build:msan --copt -fno-omit-frame-pointer
build:msan --linkopt -fsanitize=memory

# --config ubsan: Undefined Behavior Sanitizer
build:ubsan --strip=never
build:ubsan --copt -fsanitize=undefined
build:ubsan --copt -O1
build:ubsan --copt -fno-omit-frame-pointer
build:ubsan --linkopt -fsanitize=undefined
build:ubsan --linkopt -lubsan

# --config local_instance: builds the service to run with the instance=local flag
build:local_instance --//:instance=local
build:local_instance --@google_privacysandbox_servers_common//:instance=local
